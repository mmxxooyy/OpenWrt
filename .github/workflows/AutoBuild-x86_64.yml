#=================================================
# Description: Build OpenWrt using GitHub Actions
# Based on: https://github.com/P3TERX/Actions-OpenWrt
# Blog: https://p3terx.com
# Author: Eva
#=================================================

name: x86_64

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: false
        default: ''

### ÁéØÂ¢ÉÂèòÈáè
env:
  # Ê∫êÁ†Å‰ªìÂ∫ìÂú∞ÂùÄ
  REPO_URL: https://github.com/coolsnowwolf/lede
  # Ê∫êÁ†ÅÂàÜÊîØ
  REPO_BRANCH: master
  # feeds.conf Êñá‰ª∂‰ΩçÁΩÆ
  FEEDS_CONF: feeds.conf.default
  # ÁºñËØëÊó∂Ë∞ÉÁî®ÁöÑ [.config] Êñá‰ª∂ÂêçÁß∞
  CONFIG_FILE: .config
  # Ëá™ÂÆö‰πâËÑöÊú¨,Êõ¥Êñ∞‰∏éÂÆâË£Ö feeds ÂâçÊâßË°å
  DIY_P1_SH: diy-part1.sh
  # Ëá™ÂÆö‰πâËÑöÊú¨ÔºåÊõ¥Êñ∞‰∏éÂÆâË£Ö feeds ÂêéÊâßË°å
  DIY_P2_SH: diy-part2.sh
  # ÊòØÂê¶‰∏ä‰º† bin Êñá‰ª∂Â§π
  UPLOAD_BIN_DIR: false
  # ÊòØÂê¶‰∏ä‰º†Âõ∫‰ª∂
  UPLOAD_FIRMWARE: true
  # ÊòØÂê¶‰∏ä‰º†Âõ∫‰ª∂Âà∞Â•∂ÁâõÂø´‰º†
  UPLOAD_COWTRANSFER: false
  # ÊòØÂê¶‰∏ä‰º†Âõ∫‰ª∂Âà∞ WeTransfer
  UPLOAD_WETRANSFER: false
  # ÊòØÂê¶‰∏ä‰º†Âõ∫‰ª∂Âà∞ Releases È°µÈù¢
  UPLOAD_RELEASE: false

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Ê£ÄÂá∫È°πÁõÆÂàÜÊîØ
      uses: actions/checkout@main

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: ‰∏ãËΩΩÂõ∫‰ª∂Ê∫êÁ†Å
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    - name: Âä†ËΩΩËá™ÂÆö‰πâ feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
    - name: Êõ¥Êñ∞ feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: ÂÆâË£Ö feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Âä†ËΩΩËá™ÂÆö‰πâÈÖçÁΩÆ
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
    - name: ‰∏ãËΩΩÂÆâË£ÖÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: ÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: Êü•ÁúãÁ£ÅÁõòÂç†Áî®
      if: (!cancelled())
      run: df -hT

    - name: ‰∏ä‰º† bin Êñá‰ª∂Â§π
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Êï¥ÁêÜÊñá‰ª∂
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
    - name: ‰∏ä‰º†Âõ∫‰ª∂
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞Â•∂ÁâõÂø´‰º†
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞ WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
    - name: ÂàõÂª∫ release Ê†áÁ≠æ
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞ Releases È°µÈù¢
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
